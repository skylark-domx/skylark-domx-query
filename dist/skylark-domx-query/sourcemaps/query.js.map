{"version":3,"sources":["query.js"],"names":["define","skylark","langx","noder","finder","isQ","some","Array","prototype","push","slice","every","concat","filter","map","forEach","indexOf","sort","rquickExpr","funcArg","isArrayLike","isString","uniq","isFunction","type","isObject","isArray","isWindow","isDocument","isPlainObject","compact","flatten","camelCase","dasherize","children","wrapper_node_operation","func","context","oldValueFunc","html","argType","nodes","arguments","arg","createFragment","length","this","each","idx","apply","wrapper_map","params","call","result","elem","query","wrapper_selector","last","selector","wrapper_selector_until","util","wrapper_every_act","node","wrapper_value","value","isDefined","newValue","$","NodeList","klass","klassName","init","match","props","doc","charAt","exec","byId","ownerDoc","find","descendants","window","name","attr","object","ready","rootQuery","document","fn","mixin","el","i","get","undefined","toArray","size","remove","callback","not","element","matches","add","is","inArray","isHtmlNode","excludes","item","has","contains","eq","first","closest","parents","ancestors","parentsUntil","parent","contents","empty","pluck","property","pushStack","elms","ret","prevObject","replaceWith","newContent","before","wrap","htmlIsFunction","wrapAll","ownerDocument","clone","parentNode","insertBefore","firstElementChild","append","wrapInner","self","unwrap","childNodes","cloneNode","toggle","setting","css","show","hide","prev","prevAll","previousSiblings","next","nextAll","nextSiblings","siblings","index","detach","hover","fnOver","fnOut","mouseenter","mouseleave","traverse","after","prepend","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","scrollParent","includeHidden","position","excludeStaticParent","overflowRegex","test","end","andSelf","addBack","split","eventType","place","refNode","descendant","replace","addContent","content","template","substitute","disableSelection","createElement","on","event","preventDefault","enableSelection","off","reflow","flow","isBlockNode","plugin","options","args","returnValue","plugins","instantiate","wraps","wrapper_some_chk","wrapper_every_act_firstArgFunc","arg1","wrapper_name_value","attach"],"mappings":"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","file":"../query.js","sourcesContent":["define([\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\"\r\n], function(skylark, langx, noder, finder) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_node_operation(func, context, oldValueFunc) {\r\n        return function(html) {\r\n            var argType, nodes = langx.map(arguments, function(arg) {\r\n                argType = type(arg)\r\n                return argType == \"function\" || argType == \"object\" || argType == \"array\" || arg == null ?\r\n                    arg : noder.createFragment(arg)\r\n            });\r\n            if (nodes.length < 1) {\r\n                return this\r\n            }\r\n            this.each(function(idx) {\r\n                func.apply(context, [this, nodes, idx > 0]);\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = langx.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return query(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            //if (selector === undefined) { //TODO : needs confirm?\r\n            //    selector = util;\r\n            //    util = undefined;\r\n            //}\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) { // TODO\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx,node) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this;\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem,name,newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (selector !== window && isArrayLike(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                $.ready(function() {\r\n                    selector($);\r\n                });\r\n                return rootQuery;\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        },rootQuery = $(document);\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            //remove: wrapper_every_act(noder.remove, noder),\r\n            remove : function(selector) {\r\n                if (selector) {\r\n                    return this.find(selector).remove();\r\n                }\r\n                this.each(function(i,node){\r\n                    noder.remove(node);\r\n                });\r\n                return this;\r\n            },\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx,node) {\r\n                        if (!selector.call(this, idx,node)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            html: wrapper_value(noder.html, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(html) {\r\n                /*\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index,node) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index,node) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n                */\r\n                var htmlIsFunction = typeof html === \"function\";\r\n\r\n                return this.each( function( i ) {\r\n                    $( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\r\n                } );                \r\n            },\r\n\r\n            wrapAll: function(html) {\r\n                /*\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n                */\r\n                var wrap;\r\n\r\n                if ( this[ 0 ] ) {\r\n                    if ( typeof html === \"function\" ) {\r\n                        html = html.call( this[ 0 ] );\r\n                    }\r\n\r\n                    // The elements to wrap the target around\r\n                    wrap = $( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\r\n\r\n                    if ( this[ 0 ].parentNode ) {\r\n                        wrap.insertBefore( this[ 0 ] );\r\n                    }\r\n\r\n                    wrap.map( function() {\r\n                        var elem = this;\r\n\r\n                        while ( elem.firstElementChild ) {\r\n                            elem = elem.firstElementChild;\r\n                        }\r\n\r\n                        return elem;\r\n                    } ).append( this );\r\n                }\r\n\r\n                return this;\r\n\r\n            },\r\n\r\n            wrapInner: function(html) {\r\n                /*\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index,node) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index,node) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n                */\r\n                if ( typeof html === \"function\" ) {\r\n                    return this.each( function( i ) {\r\n                        $( this ).wrapInner( html.call( this, i ) );\r\n                    } );\r\n                }\r\n\r\n                return this.each( function() {\r\n                    var self = $( this ),\r\n                        contents = self.contents();\r\n\r\n                    if ( contents.length ) {\r\n                        contents.wrapAll( html );\r\n\r\n                    } else {\r\n                        self.append( html );\r\n                    }\r\n                } );\r\n\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                /*\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n                */\r\n                this.parent(selector).not(\"body\").each( function() {\r\n                    $(this).replaceWith(this.childNodes);\r\n                });\r\n                return this;\r\n\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSiblings, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            }\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings,prev,prevAll,next,nextAll'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n\r\n\r\n        $.fn.disableSelection = ( function() {\r\n            var eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\r\n                \"selectstart\" :\r\n                \"mousedown\";\r\n\r\n            return function() {\r\n                return this.on( eventType + \".ui-disableSelection\", function( event ) {\r\n                    event.preventDefault();\r\n                } );\r\n            };\r\n        } )();\r\n\r\n        $.fn.enableSelection = function() {\r\n            return this.off( \".ui-disableSelection\" );\r\n        };\r\n\r\n        $.fn.reflow = function() {\r\n            return noder.flow(this[0]);\r\n        };\r\n\r\n        $.fn.isBlockNode = function() {\r\n            return noder.isBlockNode(this[0]);\r\n        };\r\n       \r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n\r\n    query.wraps = {\r\n        wrapper_node_operation,\r\n        wrapper_map,\r\n        wrapper_value,\r\n        wrapper_selector,\r\n        wrapper_some_chk,\r\n        wrapper_selector_until,\r\n        wrapper_every_act_firstArgFunc,\r\n        wrapper_every_act,\r\n        wrapper_name_value\r\n\r\n    };\r\n\r\n    return skylark.attach(\"domx.query\", query);\r\n\r\n});"]}