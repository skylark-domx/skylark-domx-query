{"version":3,"sources":["query.js"],"names":["define","skylark","langx","noder","finder","isQ","some","Array","prototype","push","slice","every","concat","filter","map","forEach","indexOf","sort","rquickExpr","funcArg","isArrayLike","isString","uniq","isFunction","type","isObject","isArray","isWindow","isDocument","isPlainObject","compact","flatten","camelCase","dasherize","children","wrapper_map","func","context","params","call","arguments","result","this","elem","idx","apply","query","wrapper_selector","last","selector","wrapper_selector_until","util","wrapper_every_act","each","node","$","NodeList","klass","klassName","init","match","nodes","props","doc","charAt","length","exec","createFragment","byId","ownerDoc","find","descendants","window","name","attr","object","ready","fn","mixin","el","i","get","undefined","toArray","size","remove","callback","not","element","matches","add","is","inArray","isHtmlNode","excludes","item","has","contains","eq","first","closest","parents","ancestors","parentsUntil","parent","contents","empty","pluck","property","pushStack","elms","ret","prevObject","replaceWith","newContent","before","wrap","structure","dom","clone","parentNode","index","wrapAll","cloneNode","wrappingElement","append","wrapInner","self","unwrap","document","createTextNode","childNodes","textContent","toggle","setting","css","show","hide","prev","prevAll","previousSiblings","next","nextAll","nextSiblings","siblings","detach","hover","fnOver","fnOut","mouseenter","mouseleave","traverse","wrapper_node_operation","oldValueFunc","html","argType","arg","after","prepend","appendTo","prependTo","insertBefore","insertAfter","replaceAll","original","elems","insert","scrollParent","includeHidden","position","excludeStaticParent","overflowRegex","test","ownerDocument","end","andSelf","addBack","split","eventType","place","refNode","descendant","replace","addContent","content","template","substitute","disableSelection","createElement","on","event","preventDefault","enableSelection","off","reflow","flow","isBlockNode","plugin","options","args","returnValue","plugins","instantiate","wraps","wrapper_value","value","isDefined","newValue","wrapper_some_chk","wrapper_every_act_firstArgFunc","arg1","wrapper_name_value","attach"],"mappings":"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","file":"../query.js","sourcesContent":["define([\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\"\r\n], function(skylark, langx, noder, finder) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = langx.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return query(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            //if (selector === undefined) { //TODO : needs confirm?\r\n            //    selector = util;\r\n            //    util = undefined;\r\n            //}\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) { // TODO\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx,node) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (selector !== window && isArrayLike(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                $.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            //remove: wrapper_every_act(noder.remove, noder),\r\n            remove : function(selector) {\r\n                if (selector) {\r\n                    return this.find(selector).remove();\r\n                }\r\n                this.each(function(i,node){\r\n                    noder.remove(node);\r\n                });\r\n                return this;\r\n            },\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx,node) {\r\n                        if (!selector.call(this, idx,node)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index,node) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index,node) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index,node) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index,node) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSiblings, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            }\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"function\" || argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings,prev,prevAll,next,nextAll'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n\r\n\r\n        $.fn.disableSelection = ( function() {\r\n            var eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\r\n                \"selectstart\" :\r\n                \"mousedown\";\r\n\r\n            return function() {\r\n                return this.on( eventType + \".ui-disableSelection\", function( event ) {\r\n                    event.preventDefault();\r\n                } );\r\n            };\r\n        } )();\r\n\r\n        $.fn.enableSelection = function() {\r\n            return this.off( \".ui-disableSelection\" );\r\n        };\r\n\r\n        $.fn.reflow = function() {\r\n            return noder.flow(this[0]);\r\n        };\r\n\r\n        $.fn.isBlockNode = function() {\r\n            return noder.isBlockNode(this[0]);\r\n        };\r\n       \r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n\r\n    query.wraps = {\r\n        wrapper_node_operation,\r\n        wrapper_map,\r\n        wrapper_value,\r\n        wrapper_selector,\r\n        wrapper_some_chk,\r\n        wrapper_selector_until,\r\n        wrapper_every_act_firstArgFunc,\r\n        wrapper_every_act,\r\n        wrapper_name_value\r\n\r\n    };\r\n\r\n    return skylark.attach(\"domx.query\", query);\r\n\r\n});"]}