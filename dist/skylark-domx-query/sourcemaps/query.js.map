{"version":3,"sources":["query.js"],"names":["define","skylark","langx","noder","datax","eventer","finder","geom","styler","scripter","isQ","some","Array","prototype","push","slice","every","concat","filter","map","forEach","indexOf","sort","rquickExpr","funcArg","isArrayLike","isString","uniq","isFunction","type","isObject","isArray","isWindow","isDocument","isPlainObject","compact","flatten","camelCase","dasherize","children","wrapper_map","func","context","params","call","arguments","result","this","elem","idx","apply","query","wrapper_selector","last","selector","wrapper_selector_until","util","wrapper_every_act","each","node","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_some_chk","wrapper_name_value","name","value","isDefined","wrapper_value","newValue","$","NodeList","klass","klassName","init","match","nodes","props","doc","charAt","length","exec","createFragment","byId","ownerDoc","find","descendants","window","attr","object","ready","fn","mixin","el","i","get","undefined","toArray","size","remove","callback","not","element","matches","add","is","inArray","isHtmlNode","excludes","item","has","contains","eq","first","closest","parents","ancestors","parentsUntil","parent","contents","empty","pluck","property","pushStack","elms","ret","prevObject","replaceWith","newContent","before","wrap","structure","dom","clone","parentNode","index","wrapAll","cloneNode","wrappingElement","append","wrapInner","self","unwrap","document","createTextNode","childNodes","textContent","toggle","setting","css","show","hide","prev","prevAll","previousSiblings","next","nextAll","nextSiblings","siblings","html","text","removeAttr","prop","removeProp","data","removeData","val","offset","pagePosition","style","hasClass","addClass","className","removeClass","toggleClass","scrollTop","scrollLeft","position","options","of","posit","relativePosition","offsetParent","detach","hover","fnOver","fnOut","mouseenter","mouseleave","width","height","clientSize","dimension","Dimension","replace","m","toUpperCase","margin","cb","me","marginExtents","left","right","top","bottom","mb","innerWidth","clientWidth","innerHeight","clientHeight","traverse","wrapper_node_operation","argType","arg","after","prepend","appendTo","prependTo","insertBefore","insertAfter","replaceAll","original","elems","insert","on","off","trigger","split","event","one","scrollParent","includeHidden","excludeStaticParent","overflowRegex","test","ownerDocument","end","andSelf","addBack","eventType","place","refNode","descendant","addContent","content","template","substitute","replaceClass","newClass","oldClass","disableSelection","createElement","preventDefault","enableSelection","reflow","flow","isBlockNode","plugin","args","returnValue","plugins","instantiate","wraps","attach"],"mappings":"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","file":"../query.js","sourcesContent":["define([\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-scripter\"\r\n], function(skylark, langx, noder, datax, eventer,  finder, geom, styler, scripter) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = langx.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return query(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            //if (selector === undefined) { //TODO : needs confirm?\r\n            //    selector = util;\r\n            //    util = undefined;\r\n            //}\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) { // TODO\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx,node) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (selector !== window && isArrayLike(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            //remove: wrapper_every_act(noder.remove, noder),\r\n            remove : function(selector) {\r\n                if (selector) {\r\n                    return this.find(selector).remove();\r\n                }\r\n                this.each(function(i,node){\r\n                    noder.remove(node);\r\n                });\r\n                return this;\r\n            },\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx,node) {\r\n                        if (!selector.call(this, idx,node)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index,node) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index,node) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index,node) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index,node) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSiblings, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(scripter.html, scripter, scripter.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function(options) {\r\n                if (!this.length) return\r\n\r\n                if (options) {\r\n                    if (options.of && options.of.length) {\r\n                        options = langx.clone(options);\r\n                        options.of = options.of[0];\r\n                    }\r\n                    return this.each( function() {\r\n                        geom.posit(this,options);\r\n                    });\r\n                } else {\r\n                    var elem = this[0];\r\n\r\n                    return geom.relativePosition(elem);\r\n\r\n                }             \r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"function\" || argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings,prev,prevAll,next,nextAll'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.disableSelection = ( function() {\r\n            var eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\r\n                \"selectstart\" :\r\n                \"mousedown\";\r\n\r\n            return function() {\r\n                return this.on( eventType + \".ui-disableSelection\", function( event ) {\r\n                    event.preventDefault();\r\n                } );\r\n            };\r\n        } )();\r\n\r\n        $.fn.enableSelection = function() {\r\n            return this.off( \".ui-disableSelection\" );\r\n        };\r\n\r\n        $.fn.reflow = function() {\r\n            return noder.flow(this[0]);\r\n        };\r\n\r\n        $.fn.isBlockNode = function() {\r\n            return noder.isBlockNode(this[0]);\r\n        };\r\n       \r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n\r\n    query.wraps = {\r\n        wrapper_node_operation,\r\n        wrapper_map,\r\n        wrapper_value,\r\n        wrapper_selector,\r\n        wrapper_some_chk,\r\n        wrapper_selector_until,\r\n        wrapper_every_act_firstArgFunc,\r\n        wrapper_every_act,\r\n        wrapper_name_value\r\n\r\n    };\r\n\r\n    return skylark.attach(\"domx.query\", query);\r\n\r\n});"]}