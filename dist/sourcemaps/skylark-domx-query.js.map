{"version":3,"sources":["skylark-domx-query.js"],"names":["define","skylark","langx","noder","datax","eventer","finder","scripter","isQ","some","Array","prototype","push","slice","every","concat","filter","map","forEach","indexOf","sort","rquickExpr","funcArg","isArrayLike","isString","uniq","isFunction","type","isObject","isArray","isWindow","isDocument","isPlainObject","compact","flatten","camelCase","dasherize","children","wrapper_map","func","context","params","call","arguments","result","this","elem","idx","apply","query","wrapper_selector","last","selector","wrapper_selector_until","util","wrapper_every_act","each","node","wrapper_name_value","oldValueFunc","name","value","isDefined","wrapper_value","newValue","$","NodeList","klass","klassName","init","match","nodes","props","doc","charAt","length","exec","createFragment","byId","ownerDoc","find","descendants","window","attr","object","ready","fn","mixin","el","i","get","undefined","toArray","size","remove","callback","not","element","matches","add","is","inArray","isHtmlNode","excludes","item","has","contains","eq","first","closest","parents","ancestors","parentsUntil","parent","contents","empty","pluck","property","pushStack","elms","ret","prevObject","replaceWith","newContent","before","wrap","structure","dom","clone","parentNode","index","wrapAll","cloneNode","wrappingElement","append","wrapInner","self","unwrap","document","createTextNode","childNodes","textContent","toggle","setting","css","show","hide","prev","prevAll","previousSiblings","next","nextAll","nextSiblings","siblings","html","text","removeAttr","prop","removeProp","data","removeData","val","detach","hover","fnOver","fnOut","mouseenter","mouseleave","traverse","wrapper_node_operation","argType","arg","after","prepend","appendTo","prependTo","insertBefore","insertAfter","replaceAll","original","elems","insert","on","off","trigger","split","event","one","scrollParent","includeHidden","position","excludeStaticParent","overflowRegex","test","ownerDocument","end","andSelf","addBack","eventType","place","refNode","descendant","replace","addContent","content","template","substitute","disableSelection","createElement","preventDefault","enableSelection","reflow","flow","isBlockNode","plugin","options","args","returnValue","plugins","instantiate","wraps","wrapper_some_chk","wrapper_every_act_firstArgFunc","arg1","attach","main"],"mappings":";;;;;;;+zBAAAA,EAAA,4BACA,wBACA,sBACA,qBACA,oBACA,uBACA,sBACA,yBACA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAUAC,EAVAC,EAAAC,MAAAC,UAAAF,KACAG,EAAAF,MAAAC,UAAAC,KAGAC,GAFAH,MAAAC,UAAAG,MACAJ,MAAAC,UAAAI,OACAL,MAAAC,UAAAE,OAEAG,GADAN,MAAAC,UAAAM,IACAP,MAAAC,UAAAK,QACAE,EAAAR,MAAAC,UAAAO,QACAC,EAAAT,MAAAC,UAAAQ,QACAC,EAAAV,MAAAC,UAAAS,KAGAC,EAAA,2CAEAC,EAAApB,EAAAoB,QACAC,EAAArB,EAAAqB,YACAC,EAAAtB,EAAAsB,SACAC,EAAAvB,EAAAuB,KACAC,EAAAxB,EAAAwB,WAEAC,EAAAzB,EAAAyB,KAOAC,GANA1B,EAAA2B,QAEA3B,EAAA4B,SAEA5B,EAAA6B,WAEA7B,EAAA0B,UAEA1B,EAAA8B,cAEA9B,EAAA+B,QAEA/B,EAAAgC,QAEAhC,EAAAiC,UAEAjC,EAAAkC,UACA9B,EAAA+B,SAEA,SAAAC,EAAAC,EAAAC,GACA,OAAA,WACA,IACAC,EAAA5B,EAAA6B,KAAAC,WACAC,EAAA1C,EAAAe,IAFA4B,KAEA,SAAAC,EAAAC,GACA,OAAAR,EAAAS,MAAAR,GAAAM,GAAA/B,OAAA0B,MAEA,OAAAQ,EAAAxB,EAAAmB,KAIA,SAAAM,EAAAX,EAAAC,EAAAW,GACA,OAAA,SAAAC,GAEAvC,EAAA6B,KAAAC,WADA,IAEAC,EAAAC,KAAA5B,IAAA,SAAA8B,EAAAD,GAGA,OAAAP,EAAAS,MAAAR,EAAAW,GAAAL,IAAAA,EAAAM,MAGA,OAAAD,GAAAC,EACAR,EAAA5B,OAAAoC,GAEAR,GAKA,SAAAS,EAAAd,EAAAC,EAAAW,GACA,OAAA,SAAAG,EAAAF,GA/EAvC,EAAA6B,KAAAC,WAgFA,IA3EAC,EAAAC,KAAA5B,IAAA,SAAA8B,EAAAD,GAGA,OAAAP,EAAAS,MAAAR,EAAAW,GAAAL,EAAAQ,IAAAR,EAAAM,EAAAE,MAGA,OAAAH,GAAAC,EACAR,EAAA5B,OAAAoC,GAEAR,GAMA,SAAAW,EAAAhB,EAAAC,GACA,OAAA,WACA,IACAC,EAAA5B,EAAA6B,KAAAC,WAIA,OAHAE,KAAAW,KAAA,SAAAT,EAAAU,GACAlB,EAAAS,MAAAR,GAAAK,MAAA9B,OAAA0B,MAHAI,MA+BA,SAAAa,EAAAnB,EAAAC,EAAAmB,GACA,OAAA,SAAAC,EAAAC,GACA,IACApB,EAAA5B,EAAA6B,KAAAC,WAEA,OAAAzC,EAAA8B,cAAA4B,IAAA1D,EAAA4D,UAAAD,IACA3C,EAAAwB,KAJAG,KAIA,SAAAC,EAAAC,GAEAY,GACArC,EAAAwB,EAAAe,EAAAd,EAAAY,EAAAb,EAAAc,IAIArB,EAAAS,MAAAR,GAAAM,GAAA/B,OAAA0B,MAXAI,MAAAA,KAeA,GACAN,EAAAS,MAAAR,GAhBAK,KAgBA,GAAAe,SADA,GAQA,SAAAG,EAAAxB,EAAAC,EAAAmB,GACA,OAAA,SAAAE,GAGA,OAAA3D,EAAA4D,UAAAD,IACA3C,EAAAwB,KAHAG,KAGA,SAAAC,EAAAC,GACA,IAAAiB,EAEAA,EADAL,EACArC,EAAAwB,EAAAe,EAAAd,EAAAY,EAAAb,IAEAe,EAEAtB,EAAAS,MAAAR,GAAAM,EAAAkB,MAVAnB,MAAAA,KAcA,GACAN,EAAAS,MAAAR,GAfAK,KAeA,UADA,GAQA,IAodAoB,EApdAC,EAAAhE,EAAAiE,OACAC,UAAA,aACAC,KAAA,SAAAjB,EAAAZ,GACA,IACA8B,EAAAC,EAAAd,EAAAe,EAsDA,GApDApB,IAHAP,KAIAL,QAAAA,EAAAA,GAAArC,EAAAsE,MAEAjD,EAAA4B,IANAP,KAQAO,SAAAA,GAGAkB,EADA,MAAAlB,EAAAsB,OAAA,IAAA,MAAAtB,EAAAsB,OAAAtB,EAAAuB,OAAA,IAAAvB,EAAAuB,QAAA,GACA,KAAAvB,EAAA,MAEA/B,EAAAuD,KAAAxB,IAIAkB,EAAA,IAEAC,EAAApE,EAAA0E,eAAAzB,GAEAlD,EAAA8B,cAAAQ,KACAgC,EAAAhC,KAIAiB,EAAAnD,EAAAwE,KAAAR,EAAA,GAAAnE,EAAA4E,SAAAvC,OAIA+B,GAAAd,KAMAvD,EAAAsB,SAAAgB,KACAA,EAAAlC,EAAA0E,KAAAxC,IAGA+B,EAAAjE,EAAA2E,YAAAzC,EAAAY,KAKAmB,EAFAnB,IAAA8B,QAAA3D,EAAA6B,GAEAA,GAGAA,IAOAmB,IAEA3D,EAAAoC,MAzDAH,KAyDA0B,GAEAC,GACA,IAAA,IAAAZ,KAAAY,EAEAtE,EAAAwB,WAAAmB,KAAAe,IACAf,KAAAe,GAAAY,EAAAZ,IAEAf,KAAAsC,KAAAvB,EAAAY,EAAAZ,IAMA,OAvEAf,QA2EAI,EAAA,WACAzC,EAAA,SAAA4E,GACA,OAAAA,aAAAlB,GAEAG,KAAA,SAAAjB,EAAAZ,GACA,OAAA,IAAA0B,EAAAd,EAAAZ,IAGA,IAAAyB,EAAA,SAAAb,EAAAZ,GACA,IAAAd,EAAA0B,GAIA,OAAA5C,EAAA4C,GACAA,EAEAZ,GAAAhC,EAAAgC,IAAAhB,EAAA4B,GACAZ,EAAAwC,KAAA5B,GAEAiB,KAAAjB,EAAAZ,GATAnC,EAAAgF,MAAA,WACAjC,EAAAa,MAYAA,EAAAqB,GAAApB,EAAAvD,UACAT,EAAAqF,MAAAtB,EAAAqB,IAGAX,OAAA,EAEA1D,IAAA,SAAAqE,GACA,OAAArB,EAAAxC,EAAAvB,EAAAe,IAAA4B,KAAA,SAAA2C,EAAAC,GACA,OAAAH,EAAA5C,KAAA8C,EAAAC,EAAAD,QAIA3E,MAAA,WACA,OAAAoD,EAAApD,EAAAmC,MAAAH,KAAAF,aAGAzB,QAAA,WACA,OAAAA,EAAA8B,MAAAH,KAAAF,YAGA+C,IAAA,SAAA3C,GACA,YAAA4C,IAAA5C,EAAAlC,EAAA6B,KAAAG,MAAAA,KAAAE,GAAA,EAAAA,EAAAA,EAAAF,KAAA8B,SAGAxD,QAAA,WACA,OAAAA,EAAA6B,MAAAH,KAAAF,YAGAvB,KAAA,WACA,OAAAA,EAAA4B,MAAAH,KAAAF,YAGAiD,QAAA,WACA,OAAA/E,EAAA6B,KAAAG,OAGAgD,KAAA,WACA,OAAAhD,KAAA8B,QAIAmB,OAAA,SAAA1C,GACA,OAAAA,EACAP,KAAAmC,KAAA5B,GAAA0C,UAEAjD,KAAAW,KAAA,SAAAiC,EAAAhC,GACAtD,EAAA2F,OAAArC,KAEAZ,OAGAW,KAAA,SAAAuC,GAEA,OADA7F,EAAAsD,KAAAX,KAAAkD,GACAlD,MAGA7B,OAAA,SAAAoC,GACA,OAAA1B,EAAA0B,GAAAP,KAAAmD,IAAAnD,KAAAmD,IAAA5C,IACAa,EAAAjD,EAAA0B,KAAAG,KAAA,SAAAoD,GACA,OAAA3F,EAAA4F,QAAAD,EAAA7C,OAIA+C,IAAA,SAAA/C,EAAAZ,GACA,OAAAyB,EAAAxC,EAAAoB,KAAA+C,UAAA7E,OAAAkD,EAAAb,EAAAZ,GAAAoD,cAGAQ,GAAA,SAAAhD,GACA,GAAAP,KAAA8B,OAAA,EAAA,CAEA,GAAAzE,EAAAsB,SAAA4B,GACA,OAAA3C,EAAAiC,KAFAG,KAEA,SAAAC,GACA,OAAAxC,EAAA4F,QAAApD,EAAAM,KAEA,GAAAlD,EAAAqB,YAAA6B,GACA,OAAA3C,EAAAiC,KANAG,KAMA,SAAAC,GACA,OAAA5C,EAAAmG,QAAAvD,EAAAM,IAAA,IAEA,GAAAlD,EAAAoG,WAAAlD,GACA,OAAA3C,EAAAiC,KAVAG,KAUA,SAAAC,GACA,OAAAA,GAAAM,IAIA,OAAA,GAGA4C,IAAA,SAAA5C,GACA,IAAAmB,KACA,GAAA7C,EAAA0B,SAAAuC,IAAAvC,EAAAV,KACAG,KAAAW,KAAA,SAAAT,EAAAU,GACAL,EAAAV,KAAAG,KAAAE,EAAAU,IAAAc,EAAA3D,KAAAiC,YAEA,CACA,IAAA0D,EAAA,iBAAAnD,EAAAP,KAAA7B,OAAAoC,GACA7B,EAAA6B,IAAA1B,EAAA0B,EAAAoD,MAAA3F,EAAA6B,KAAAU,GAAAa,EAAAb,GACAP,KAAA3B,QAAA,SAAAsE,GACAe,EAAApF,QAAAqE,GAAA,GAAAjB,EAAA3D,KAAA4E,KAGA,OAAAvB,EAAAM,IAGAkC,IAAA,SAAArD,GACA,OAAAP,KAAA7B,OAAA,WACA,OAAAY,EAAAwB,GACAjD,EAAAuG,SAAA7D,KAAAO,GACAa,EAAApB,MAAAmC,KAAA5B,GAAAyC,UAIAc,GAAA,SAAA5D,GACA,OAAA,IAAAA,EAAAF,KAAAhC,MAAAkC,GAAAF,KAAAhC,MAAAkC,GAAAA,EAAA,IAGA6D,MAAA,WACA,OAAA/D,KAAA8D,GAAA,IAGAxD,KAAA,WACA,OAAAN,KAAA8D,IAAA,IAGA3B,KAAA9B,EAAA5C,EAAA2E,YAAA3E,GAEAuG,QAAA3D,EAAA5C,EAAAuG,QAAAvG,GAaAwG,QAAA5D,EAAA5C,EAAAyG,UAAAzG,GAEA0G,aAAA3D,EAAA/C,EAAAyG,UAAAzG,GAGA2G,OAAA/D,EAAA5C,EAAA2G,OAAA3G,GAEA+B,SAAAa,EAAA5C,EAAA+B,SAAA/B,GAEA4G,SAAA5E,EAAAnC,EAAA+G,SAAA/G,GAEAgH,MAAA5D,EAAApD,EAAAgH,MAAAhH,GAGAiH,MAAA,SAAAC,GACA,OAAAnH,EAAAe,IAAA4B,KAAA,SAAA2C,GACA,OAAAA,EAAA6B,MAIAC,UAAA,SAAAC,GACA,IAAAC,EAAAvD,EAAAsD,GAEA,OADAC,EAAAC,WAAA5E,KACA2E,GAGAE,YAAA,SAAAC,GACA,OAAA9E,KAAA+E,OAAAD,GAAA7B,UAGA+B,KAAA,SAAAC,GACA,IAAAvF,EAAAb,EAAAoG,GACA,GAAAjF,KAAA,KAAAN,EACA,IAAAwF,EAAA9D,EAAA6D,GAAApC,IAAA,GACAsC,EAAAD,EAAAE,YAAApF,KAAA8B,OAAA,EAEA,OAAA9B,KAAAW,KAAA,SAAA0E,EAAAzE,GACAQ,EAAApB,MAAAsF,QACA5F,EAAAuF,EAAApF,KAAAG,KAAAqF,EAAAzE,GACAuE,EAAAD,EAAAK,WAAA,GAAAL,MAKAI,QAAA,SAAAE,GACA,GAAAxF,KAAA,GAAA,CAEA,IAAAR,EAEA,IAHA4B,EAAApB,KAAA,IAAA+E,OAAAS,EAAApE,EAAAoE,KAGAhG,EAAAgG,EAAAhG,YAAAsC,QACA0D,EAAAhG,EAAAuE,QAEA3C,EAAAoE,GAAAC,OAAAzF,MAEA,OAAAA,MAGA0F,UAAA,SAAAF,GACA,IAAA9F,EAAAb,EAAA2G,GACA,OAAAxF,KAAAW,KAAA,SAAA0E,EAAAzE,GACA,IAAA+E,EAAAvE,EAAApB,MACAqE,EAAAsB,EAAAtB,WACAa,EAAAxF,EAAA8F,EAAA3F,KAAAG,KAAAqF,EAAAzE,GAAA4E,EACAnB,EAAAvC,OAAAuC,EAAAiB,QAAAJ,GAAAS,EAAAF,OAAAP,MAIAU,OAAA,SAAArF,GAWA,OAVA,IAAAP,KAAAoE,SAAA5E,WAAAsC,OAEA9B,KAAAoE,OAAA7D,GAAA4C,IAAA,QAAAxC,KAAA,WACAS,EAAApB,MAAA6E,YAAAgB,SAAAC,eAAA9F,KAAA+F,WAAA,GAAAC,gBAGAhG,KAAAoE,SAAAzD,KAAA,WACAS,EAAApB,MAAA6E,YAAAzD,EAAApB,MAAAR,cAGAQ,MAGAmF,MAAA,WACA,OAAAnF,KAAA5B,IAAA,WACA,OAAA4B,KAAAuF,WAAA,MAKAU,OAAA,SAAAC,GACA,OAAAlG,KAAAW,KAAA,WACA,IAAAgC,EAAAvB,EAAApB,YACA8C,IAAAoD,EAAA,QAAAvD,EAAAwD,IAAA,WAAAD,GAAAvD,EAAAyD,OAAAzD,EAAA0D,UAIAC,KAAA,SAAA/F,GACA,OAAAa,EAAApB,KAAAuE,MAAA,2BAAApG,OAAAoC,GAAA,MAGAgG,QAAAlG,EAAA5C,EAAA+I,iBAAA/I,GAEAgJ,KAAA,SAAAlG,GACA,OAAAa,EAAApB,KAAAuE,MAAA,uBAAApG,OAAAoC,GAAA,MAGAmG,QAAArG,EAAA5C,EAAAkJ,aAAAlJ,GAEAmJ,SAAAvG,EAAA5C,EAAAmJ,SAAAnJ,GAEAoJ,KAAA3F,EAAAxD,EAAAmJ,KAAAnJ,EAAAA,EAAAmJ,MAEAC,KAAA5F,EAAA3D,EAAAuJ,KAAAvJ,EAAAA,EAAAuJ,MAEAxE,KAAAzB,EAAAtD,EAAA+E,KAAA/E,EAAAA,EAAA+E,MAEAyE,WAAArG,EAAAnD,EAAAwJ,WAAAxJ,GAEAyJ,KAAAnG,EAAAtD,EAAAyJ,KAAAzJ,EAAAA,EAAAyJ,MAEAC,WAAAvG,EAAAnD,EAAA0J,WAAA1J,GAEA2J,KAAArG,EAAAtD,EAAA2J,KAAA3J,EAAAA,EAAA2J,MAEAC,WAAAzG,EAAAnD,EAAA4J,WAAA5J,GAEA6J,IAAAlG,EAAA3D,EAAA6J,IAAA7J,EAAAA,EAAA6J,KAEA/B,MAAA,SAAApF,GACA,OAAAA,EACAD,KAAA1B,QAAA8C,EAAAnB,GAAA,IAEAD,KAAAoE,SAAA5E,WAAAlB,QAAA0B,KAAA,OAMAoB,EAAAqB,GAAA4E,OAAAjG,EAAAqB,GAAAQ,OAEA7B,EAAAqB,GAAA6E,MAAA,SAAAC,EAAAC,GACA,OAAAxH,KAAAyH,WAAAF,GAAAG,WAAAF,GAAAD,IAIAjK,EAAAqK,SAEA,SAAAC,EAAAlI,EAAAC,EAAAmB,GACA,OAAA,SAAA+F,GACA,IAAAgB,EAAAnG,EAAArE,EAAAe,IAAA0B,UAAA,SAAAgI,GAEA,MAAA,aADAD,EAAA/I,EAAAgJ,KACA,UAAAD,GAAA,SAAAA,GAAA,MAAAC,EACAA,EAAAxK,EAAA0E,eAAA8F,KAEA,OAAApG,EAAAI,OAAA,EACA9B,MAEAA,KAAAW,KAAA,SAAAT,GACAR,EAAAS,MAAAR,GAAAK,KAAA0B,EAAAxB,EAAA,MAEAF,OAmEA,OA9DAoB,EAAAqB,GAAAsF,MAAAH,EAAAtK,EAAAyK,MAAAzK,GAEA8D,EAAAqB,GAAAuF,QAAAJ,EAAAtK,EAAA0K,QAAA1K,GAEA8D,EAAAqB,GAAAsC,OAAA6C,EAAAtK,EAAAyH,OAAAzH,GAEA8D,EAAAqB,GAAAgD,OAAAmC,EAAAtK,EAAAmI,OAAAnI,GAGAD,EAAAsD,MACAsH,SAAA,SACAC,UAAA,UACAC,aAAA,SACAC,YAAA,QACAC,WAAA,eACA,SAAAtH,EAAAuH,GACAlH,EAAAqB,GAAA1B,GAAA,SAAAR,GAOA,IANA,IAAAgI,EACA5D,KACA6D,EAAApH,EAAAb,GACAD,EAAAkI,EAAA1G,OAAA,EACAc,EAAA,EAEAA,GAAAtC,EAAAsC,IACA2F,EAAA3F,IAAAtC,EAAAN,KAAAA,KAAAmF,OAAA,GACA/D,EAAAoH,EAAA5F,IAAA0F,GAAAC,GAIAxK,EAAAoC,MAAAwE,EAAA4D,EAAA1F,OAGA,OAAA7C,KAAAyE,UAAAE,MA8BAvD,EAnYA,GA6kBA,OAvMAA,EAmDAhB,GAlDAqC,GAAAgG,GAAA/H,EAAAlD,EAAAiL,GAAAjL,GAEA4D,EAAAqB,GAAAiG,IAAAhI,EAAAlD,EAAAkL,IAAAlL,GAEA4D,EAAAqB,GAAAkG,QAAAjI,EAAAlD,EAAAmL,QAAAnL,GAEA,qMAEAoL,MAAA,KAAAvK,QAAA,SAAAwK,GACAzH,EAAAqB,GAAAoG,GAAA,SAAA3B,EAAAhE,GACA,OAAA,KAAApD,UACAE,KAAAyI,GAAAI,EAAA3B,EAAAhE,GACAlD,KAAA2I,QAAAE,MAIAzH,EAAAqB,GAAAqG,IAAA,SAAAD,EAAAtI,EAAA2G,EAAAhE,GAYA,OAXA7F,EAAAsB,SAAA4B,IAAAlD,EAAAwB,WAAAqE,KACAA,EAAAgE,EACAA,EAAA3G,EACAA,EAAA,MAGAlD,EAAAwB,WAAAqI,KACAhE,EAAAgE,EACAA,EAAA,MAGAlH,KAAAyI,GAAAI,EAAAtI,EAAA2G,EAAAhE,EAAA,IAIA9B,EAAAqB,GAAAsG,aAAA,SAAAC,GACA,IAAAC,EAAAjJ,KAAAmG,IAAA,YACA+C,EAAA,aAAAD,EACAE,EAAAH,EAAA,uBAAA,gBACAD,EAAA/I,KAAAiE,UAAA9F,OAAA,WACA,IAAAiG,EAAAhD,EAAApB,MACA,QAAAkJ,GAAA,WAAA9E,EAAA+B,IAAA,cAGAgD,EAAAC,KAAAhF,EAAA+B,IAAA,YAAA/B,EAAA+B,IAAA,cACA/B,EAAA+B,IAAA,iBACArC,GAAA,GAEA,MAAA,UAAAmF,GAAAF,EAAAjH,OAEAiH,EADA3H,EAAApB,KAAA,GAAAqJ,eAAAxD,WAOA,SAAAzE,GACAA,EAAAqB,GAAA6G,IAAA,WACA,OAAAtJ,KAAA4E,YAAAxD,KAGAA,EAAAqB,GAAA8G,QAAA,WACA,OAAAvJ,KAAAsD,IAAAtD,KAAA4E,YAAAxD,MAGAA,EAAAqB,GAAA+G,QAAA,SAAAjJ,GACA,OAAAP,KAAA4E,WACArE,EACAP,KAAAsD,IAAAtD,KAAA4E,WAAAzG,OAAAoC,IAEAP,KAAAsD,IAAAtD,KAAA4E,YAGA5E,MAIA,uGAAA4I,MAAA,KAAAvK,QAAA,SAAAmG,GACA,IAAA/B,EAAArB,EAAAqB,GAAA+B,GACApD,EAAAqB,GAAA+B,GAAA,WACA,IAAAG,EAAAlC,EAAAtC,MAAAH,KAAAF,WAEA,OADA6E,EAAAC,WAAA5E,KACA2E,KA1BA,CA6BAvE,GAGA,SAAAgB,GA6DA,IACAqI,EA7DArI,EAAAqB,GAAArC,MAAAgB,EAAAqB,GAAAN,KAEAf,EAAAqB,GAAAiH,MAAA,SAAAC,EAAAV,GAwBA,OALA5L,EAAAsB,SAAAgL,GACAA,EAAAlM,EAAAmM,WAAAD,GACAhM,EAAAgM,KACAA,EAAAA,EAAA,IAEA3J,KAAAW,KAAA,SAAAiC,EAAAhC,GACA,OAAAqI,GACA,IAAA,SACA3L,EAAAyH,OAAA4E,EAAA/I,GACA,MACA,IAAA,QACAtD,EAAAyK,MAAA4B,EAAA/I,GACA,MACA,IAAA,UACAtD,EAAAuM,QAAAF,EAAA/I,GACA,MACA,IAAA,OACAtD,EAAAgH,MAAAqF,GACArM,EAAAmI,OAAAkE,EAAA/I,GACA,MACA,IAAA,QACAtD,EAAA0K,QAAA2B,EAAA/I,GACA,MAEA,QACAtD,EAAAmI,OAAAkE,EAAA/I,OAKAQ,EAAAqB,GAAAqH,WAAA,SAAAC,EAAAd,GAIA,OAHAc,EAAAC,WACAD,EAAA1M,EAAA4M,WAAAF,EAAAC,SAAAD,IAEA/J,KAAAyF,OAAAsE,IAKA3I,EAAAqB,GAAAyH,kBACAT,EAAA,kBAAA5D,SAAAsE,cAAA,OACA,cACA,YAEA,WACA,OAAAnK,KAAAyI,GAAAgB,EAAA,uBAAA,SAAAZ,GACAA,EAAAuB,qBAKAhJ,EAAAqB,GAAA4H,gBAAA,WACA,OAAArK,KAAA0I,IAAA,yBAGAtH,EAAAqB,GAAA6H,OAAA,WACA,OAAAhN,EAAAiN,KAAAvK,KAAA,KAGAoB,EAAAqB,GAAA+H,YAAA,WACA,OAAAlN,EAAAkN,YAAAxK,KAAA,KAlFA,CAsFAI,GAEAA,EAAAqC,GAAAgI,OAAA,SAAA1J,EAAA2J,GACA,IAAAC,EAAA3M,EAAA6B,KAAAC,UAAA,GACA6F,EAAA3F,KACA4K,EAAA5K,KAKA,OAHAA,KAAAW,KAAA,WACAiK,EAAAC,QAAAC,YAAA3K,MAAAwF,GAAA3F,KAAAe,GAAA7C,OAAAyM,MAEAC,GAIAxK,EAAA2K,OACAnD,uBAAAA,uBACAnI,YAAAA,EACAyB,cAAAA,EACAb,iBAAAA,EACA2K,iBA9sBA,SAAAtL,EAAAC,GACA,OAAA,WACA,IACAC,EAAA5B,EAAA6B,KAAAC,WACA,OAAAlC,EAAAiC,KAFAG,KAEA,SAAAC,GACA,OAAAP,EAAAS,MAAAR,GAAAM,GAAA/B,OAAA0B,QA0sBAY,uBAAAA,EACAyK,+BA5tBA,SAAAvL,EAAAC,EAAAmB,GACA,OAAA,SAAAoK,GACA,IACAtL,EAAA5B,EAAA6B,KAAAC,WAKA,OAJAzB,EAAAwB,KAFAG,KAEA,SAAAC,EAAAC,GACAzB,EAAAwB,EAAAiL,EAAAhL,EAAAY,EAAAb,IACAP,EAAAS,MAAAR,GAAAM,EAAAiL,GAAAhN,OAAA0B,EAAA5B,MAAA,OAJAgC,OA2tBAU,kBAAAA,EACAG,mBAAAA,GAIAzD,EAAA+N,OAAA,aAAA/K,KAGAjD,EAAA,2BACA,WACA,SAAAiD,GACA,OAAAA,IAEAjD,EAAA,sBAAA,2BAAA,SAAAiO,GAAA,OAAAA","file":"../skylark-domx-query.js","sourcesContent":["define('skylark-domx-query/query',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-scripter\"\r\n], function(skylark, langx, noder, datax, eventer,  finder, scripter) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = langx.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return query(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            //if (selector === undefined) { //TODO : needs confirm?\r\n            //    selector = util;\r\n            //    util = undefined;\r\n            //}\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) { // TODO\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx,node) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (selector !== window && isArrayLike(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            //remove: wrapper_every_act(noder.remove, noder),\r\n            remove : function(selector) {\r\n                if (selector) {\r\n                    return this.find(selector).remove();\r\n                }\r\n                this.each(function(i,node){\r\n                    noder.remove(node);\r\n                });\r\n                return this;\r\n            },\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx,node) {\r\n                        if (!selector.call(this, idx,node)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index,node) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index,node) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index,node) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index,node) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSiblings, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(scripter.html, scripter, scripter.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            }\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"function\" || argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings,prev,prevAll,next,nextAll'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n\r\n\r\n        $.fn.disableSelection = ( function() {\r\n            var eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\r\n                \"selectstart\" :\r\n                \"mousedown\";\r\n\r\n            return function() {\r\n                return this.on( eventType + \".ui-disableSelection\", function( event ) {\r\n                    event.preventDefault();\r\n                } );\r\n            };\r\n        } )();\r\n\r\n        $.fn.enableSelection = function() {\r\n            return this.off( \".ui-disableSelection\" );\r\n        };\r\n\r\n        $.fn.reflow = function() {\r\n            return noder.flow(this[0]);\r\n        };\r\n\r\n        $.fn.isBlockNode = function() {\r\n            return noder.isBlockNode(this[0]);\r\n        };\r\n       \r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n\r\n    query.wraps = {\r\n        wrapper_node_operation,\r\n        wrapper_map,\r\n        wrapper_value,\r\n        wrapper_selector,\r\n        wrapper_some_chk,\r\n        wrapper_selector_until,\r\n        wrapper_every_act_firstArgFunc,\r\n        wrapper_every_act,\r\n        wrapper_name_value\r\n\r\n    };\r\n\r\n    return skylark.attach(\"domx.query\", query);\r\n\r\n});\ndefine('skylark-domx-query/main',[\r\n\t\"./query\"\r\n],function(query){\r\n\treturn query;\r\n});\ndefine('skylark-domx-query', ['skylark-domx-query/main'], function (main) { return main; });\n\n"]}