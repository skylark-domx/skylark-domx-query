{"version":3,"sources":["skylark-domx-query.js"],"names":["define","skylark","langx","noder","datax","eventer","finder","geom","styler","fx","scripter","isQ","some","Array","prototype","push","slice","every","concat","filter","map","forEach","indexOf","sort","rquickExpr","funcArg","isArrayLike","isString","uniq","isFunction","type","isObject","isArray","isWindow","isDocument","isPlainObject","compact","flatten","camelCase","dasherize","children","wrapper_map","func","context","params","call","arguments","result","this","elem","idx","apply","query","wrapper_selector","last","selector","wrapper_every_act","each","node","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_name_value","name","value","isDefined","wrapper_value","newValue","$","NodeList","klass","klassName","init","match","nodes","props","doc","charAt","length","exec","createFragment","byId","ownerDoc","find","descendants","window","attr","object","ready","fn","mixin","el","i","get","undefined","toArray","size","remove","callback","not","element","matches","add","is","inArray","isHtmlNode","excludes","item","has","contains","eq","first","closest","parents","ancestors","parentsUntil","util","parent","contents","empty","pluck","property","pushStack","elms","ret","prevObject","replaceWith","newContent","before","wrap","structure","dom","clone","parentNode","index","wrapAll","cloneNode","wrappingElement","append","wrapInner","self","unwrap","document","createTextNode","childNodes","textContent","hide","toggle","setting","css","show","prev","prevAll","previousSiblings","next","nextAll","nextSiblings","siblings","html","text","removeAttr","prop","removeProp","data","removeData","val","offset","pagePosition","style","hasClass","wrapper_some_chk","addClass","className","removeClass","toggleClass","scrollTop","scrollLeft","position","options","of","posit","relativePosition","offsetParent","detach","hover","fnOver","fnOut","mouseenter","mouseleave","width","height","clientSize","dimension","Dimension","replace","m","toUpperCase","margin","cb","me","marginExtents","left","right","top","bottom","mb","innerWidth","clientWidth","innerHeight","clientHeight","traverse","wrapper_node_operation","argType","arg","after","prepend","appendTo","prependTo","insertBefore","insertAfter","replaceAll","original","elems","insert","on","off","trigger","split","event","one","animate","emulateTransitionEnd","toogle","fadeTo","fadeIn","fadeOut","fadeToggle","slideDown","slideToggle","slideUp","scrollParent","includeHidden","excludeStaticParent","overflowRegex","test","ownerDocument","end","andSelf","addBack","eventType","place","refNode","descendant","addContent","content","template","substitute","replaceClass","newClass","oldClass","disableSelection","createElement","preventDefault","enableSelection","plugin","args","returnValue","plugins","instantiate","attach","main"],"mappings":"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","file":"../skylark-domx-query.js","sourcesContent":["define('skylark-domx-query/query',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-fx\",\r\n    \"skylark-domx-scripter\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx,scripter) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = langx.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return query(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            //if (selector === undefined) { //TODO : needs confirm?\r\n            //    selector = util;\r\n            //    util = undefined;\r\n            //}\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) { // TODO\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx,node) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (selector !== window && isArrayLike(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            //remove: wrapper_every_act(noder.remove, noder),\r\n            remove : function(selector) {\r\n                if (selector) {\r\n                    return this.find(selector).remove();\r\n                }\r\n                this.each(function(i,node){\r\n                    noder.remove(node);\r\n                });\r\n                return this;\r\n            },\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx,node) {\r\n                        if (!selector.call(this, idx,node)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index,node) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index,node) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index,node) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index,node) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSiblings, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(scripter.html, scripter, scripter.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function(options) {\r\n                if (!this.length) return\r\n\r\n                if (options) {\r\n                    if (options.of && options.of.length) {\r\n                        options = langx.clone(options);\r\n                        options.of = options.of[0];\r\n                    }\r\n                    return this.each( function() {\r\n                        geom.posit(this,options);\r\n                    });\r\n                } else {\r\n                    var elem = this[0];\r\n\r\n                    return geom.relativePosition(elem);\r\n\r\n                }             \r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"function\" || argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n        $.fn.emulateTransitionEnd = wrapper_every_act(fx.emulateTransitionEnd, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings,prev,prevAll,next,nextAll'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.disableSelection = ( function() {\r\n            var eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\r\n                \"selectstart\" :\r\n                \"mousedown\";\r\n\r\n            return function() {\r\n                return this.on( eventType + \".ui-disableSelection\", function( event ) {\r\n                    event.preventDefault();\r\n                } );\r\n            };\r\n        } )();\r\n\r\n        $.fn.enableSelection = function() {\r\n            return this.off( \".ui-disableSelection\" );\r\n        };\r\n       \r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    return skylark.attach(\"domx.query\", query);\r\n\r\n});\ndefine('skylark-domx-query/main',[\r\n\t\"./query\"\r\n],function(query){\r\n\treturn query;\r\n});\ndefine('skylark-domx-query', ['skylark-domx-query/main'], function (main) { return main; });\n\n"]}